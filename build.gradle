plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'net.nordmc.duels'
version = '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }


}

dependencies {

    compileOnly 'org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT'

    compileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok:1.18.24')

    compileOnly 'org.checkerframework:checker-qual:3.24.0'
    annotationProcessor('org.checkerframework:checker-qual:3.24.0')

    implementation 'cloud.commandframework:cloud-bukkit:1.7.1'
    implementation 'cloud.commandframework:cloud-annotations:1.7.1'

    implementation 'fr.mrmicky:fastboard:1.2.1'
    implementation("org.sql2o:sql2o:1.6.0")

}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    setArchiveName("NordDuels-${project.version}.jar")
    exclude 'META-INF/**'
    exclude 'LICENSE'
    relocate 'fr.mrmicky.fastboard', 'net.nordmc.duels.board'
    relocate 'cloud.commandframework', 'net.nordmc.duels.commands.base'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'